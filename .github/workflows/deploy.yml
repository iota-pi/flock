name: Test & Deploy

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy:
    name: Run tests & deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - run: corepack enable

    - name: Install dependencies
      run: |
        cd app
        yarn install --immutable
        cd ../vault
        yarn install --immutable

    - name: Start docker containers
      run: docker compose up -d

    - name: Initialise database for testing
      run: cd vault && yarn docker:initdb

    - name: Run app unit tests
      run: cd app && yarn test

    - name: Run vault unit tests
      run: cd vault && yarn docker:test

    - name: Initialise terraform
      run: cd infra && ./tf.sh init

    - name: Deploy lambda
      run: cd deploy && ./deploy-vault.sh
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_EC2_METADATA_DISABLED: true

    - name: Deploy app
      run: cd deploy && ./deploy-app.sh
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_EC2_METADATA_DISABLED: true

    - name: Deploy Terraform IAC
      run: |
        cd infra
        ./tf.sh apply -auto-approve
      env:
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_EC2_METADATA_DISABLED: true

    - name: Lint app
      run: cd app && yarn lint

    - name: Lint vault
      run: cd vault && yarn lint

    - name: Check IAC formatting
      run: cd infra && terraform fmt -check
